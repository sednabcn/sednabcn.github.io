name: Deploy Static Site and Generate Sitemaps

# Triggers when code is pushed to main branch or manually triggered
on:
  push:
    branches: ["master"]
  workflow_dispatch:
  schedule:
    # Run weekly on Sunday at midnight to update sitemaps
    - cron: '0 0 * * 0'

# Set required permissions
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one deployment at a time
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build and deploy the static site
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Generate Sitemaps
        run: |
          # Install Python dependencies
          pip install requests beautifulsoup4 lxml

          # Create directories if they don't exist
          mkdir -p .github/scripts
          
          # Create the sitemap generator script
          cat > .github/scripts/generate_sitemaps.py << 'EOF'
#!/usr/bin/env python3
"""
Script to generate sitemaps for the main GitHub Pages site and update
references to project sitemaps.
"""

import os
import re
import xml.dom.minidom
import datetime
from pathlib import Path

def generate_sitemap_index():
    """Generate the sitemap index file that references all other sitemaps."""
    today = datetime.date.today().isoformat()
    
    sitemap_index = f"""<?xml version="1.0" encoding="UTF-8"?>
<sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <sitemap>
    <loc>https://sednabcn.github.io/sitemap-main.xml</loc>
    <lastmod>{today}</lastmod>
  </sitemap>
  <sitemap>
    <loc>https://sednabcn.github.io/ai-llm-blog/sitemap.xml</loc>
    <lastmod>{today}</lastmod>
  </sitemap>
  <!-- Add other project sitemaps as needed -->
</sitemapindex>
"""
    
    with open("sitemap.xml", "w") as f:
        f.write(sitemap_index)
    
    print("Generated sitemap index at sitemap.xml")

def generate_main_sitemap():
    """Generate the main sitemap for the root site."""
    today = datetime.date.today().isoformat()
    
    # Try to read the index.html to find any additional links
    try:
        with open("index.html", "r") as f:
            content = f.read()
            
        # Find project links
        links = re.findall(r'href="(https://sednabcn\.github\.io/[^"]+)"', content)
        
        # De-duplicate links
        links = list(set(links))
    except FileNotFoundError:
        links = []
    
    # Start with the base URLs
    urls = [
        {
            "loc": "https://sednabcn.github.io/",
            "lastmod": today,
            "changefreq": "weekly",
            "priority": "1.0"
        },
        {
            "loc": "https://sednabcn.github.io/ai-llm-blog/",
            "lastmod": today,
            "changefreq": "weekly",
            "priority": "0.9"
        },
        {
            "loc": "https://sednabcn.github.io/ai-llm-blog/posts/",
            "lastmod": today,
            "changefreq": "weekly",
            "priority": "0.8"
        },
        {
            "loc": "https://sednabcn.github.io/ai-llm-blog/about/",
            "lastmod": today,
            "changefreq": "monthly",
            "priority": "0.7"
        },
        {
            "loc": "https://sednabcn.github.io/ai-llm-blog/categories/",
            "lastmod": today,
            "changefreq": "weekly",
            "priority": "0.7"
        },
        {
            "loc": "https://sednabcn.github.io/ai-llm-blog/tags/",
            "lastmod": today,
            "changefreq": "weekly",
            "priority": "0.7"
        }
    ]
    
    # Add any additional links found in the HTML
    for link in links:
        if link not in [url["loc"] for url in urls]:
            urls.append({
                "loc": link,
                "lastmod": today,
                "changefreq": "monthly",
                "priority": "0.5"
            })
    
    # Create the main sitemap XML
    main_sitemap = '<?xml version="1.0" encoding="UTF-8"?>\n'
    main_sitemap += '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">\n'
    
    for url in urls:
        main_sitemap += f'  <url>\n'
        main_sitemap += f'    <loc>{url["loc"]}</loc>\n'
        main_sitemap += f'    <lastmod>{url["lastmod"]}</lastmod>\n'
        main_sitemap += f'    <changefreq>{url["changefreq"]}</changefreq>\n'
        main_sitemap += f'    <priority>{url["priority"]}</priority>\n'
        main_sitemap += f'  </url>\n'
    
    main_sitemap += '</urlset>'
    
    # Format the XML for better readability
    dom = xml.dom.minidom.parseString(main_sitemap)
    pretty_xml = dom.toprettyxml(indent="  ")
    
    # Remove extra empty lines
    pretty_xml = os.linesep.join([s for s in pretty_xml.splitlines() if s.strip()])
    
    with open("sitemap-main.xml", "w") as f:
        f.write(pretty_xml)
    
    print("Generated main sitemap at sitemap-main.xml")

def generate_robots_txt():
    """Generate robots.txt file."""
    robots_content = """# robots.txt for https://sednabcn.github.io/
User-agent: *
Allow: /

# Main sitemap index
Sitemap: https://sednabcn.github.io/sitemap.xml
"""
    
    with open("robots.txt", "w") as f:
        f.write(robots_content)
    
    print("Generated robots.txt")

def main():
    generate_sitemap_index()
    generate_main_sitemap()
    generate_robots_txt()

if __name__ == "__main__":
    main()
EOF
          
          # Make the script executable
          chmod +x .github/scripts/generate_sitemaps.py
          
          # Run the script
          python .github/scripts/generate_sitemaps.py

      # Check if there are any sitemap changes
      - name: Check for changes
        id: git-check
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add sitemap.xml sitemap-main.xml robots.txt
          if git diff --staged --exit-code; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes need to be committed"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      # Commit sitemap changes if any
      - name: Commit changes
        if: steps.git-check.outputs.has_changes == 'true'
        run: |
          git commit -m "Update sitemaps and robots.txt"
          git push

      # Upload the site for GitHub Pages deployment
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: .

  # Deploy to GitHub Pages
  pages:
    needs: deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  # Performance and accessibility testing after deployment
  lighthouse-check:
    needs: pages
    runs-on: ubuntu-latest
    steps:
      - name: Lighthouse Audit
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            https://sednabcn.github.io/
          uploadArtifacts: true
          artifactName: lighthouse-results-valid