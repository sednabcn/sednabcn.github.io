name: Deploy Static Site and Generate Sitemaps

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Added scheduled execution daily at midnight
  schedule:
    - cron: '0 0 * * *'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Deploy job with added sitemap generation
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      # Added steps for sitemap generation
      - name: Install Python Dependencies
        run: pip install requests beautifulsoup4 lxml

      - name: Create Python Script Directory
        run: mkdir -p .github/scripts

      - name: Create Sitemap Generator Script
        run: |
          cat > .github/scripts/generate_sitemaps.py << 'EOFMARKER'
          #!/usr/bin/env python3
          """
          This script generates sitemaps for the main GitHub Pages site.
          """
          import os
          import requests
          from bs4 import BeautifulSoup
          import lxml.etree as ET
          
          def generate_sitemap(url):
              response = requests.get(url)
              soup = BeautifulSoup(response.text, "html.parser")
              
              urls = [url]
              for link in soup.find_all("a", href=True):
                  urls.append(link["href"])
              
              root = ET.Element("urlset", xmlns="http://www.sitemaps.org/schemas/sitemap/0.9")
              for url in urls:
                  url_element = ET.SubElement(root, "url")
                  loc = ET.SubElement(url_element, "loc")
                  loc.text = url
              
              tree = ET.ElementTree(root)
              with open("sitemap.xml", "wb") as file:
                  tree.write(file)
          
          generate_sitemap("https://sednabcn.github.io")
          EOFMARKER

      - name: Make Script Executable
        run: chmod +x .github/scripts/generate_sitemaps.py

      - name: Run Sitemap Generator
        run: python .github/scripts/generate_sitemaps.py
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4